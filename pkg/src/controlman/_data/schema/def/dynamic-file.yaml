$id: https://controlman.repodynamics.com/schema/dynamic-file
$schema: https://json-schema.org/draft/2020-12/schema
title: Dynamic File
summary: Configurations for generating and maintaining a dynamic file.
description: |
  Dynamically define the content and output path of a file.
type: object
additionalProperties: false
required: [ type, path, content ]
properties:
  name:
    summary: Display name of the file.
    $ref: https://jsonschemata.repodynamics.com/string/oneline
    description: |
      This is **not** the filename,
      but a display name for documentation.
    examples:
      - MyTool Configuration File
      - SomeData Data File
      - SomeCool Source File
  type:
    summary: Format of the dynamic file.
    description: |
      If `txt` is selected, the content will be written to the given file as is.
      For other types, the content will be written in the specified format.
    type: string
    enum: [ yaml, json, toml, txt ]
  path:
    summary: Path to write the output file.
    $ref: https://jsonschemata.repodynamics.com/path/posix/absolute-from-cwd
    description: |
      Changing the path will automatically remove the file from the old path
      and add the (updated) file to the new path during the next synchronization.
    examples:
      - .github/.pre-commit-config.yaml
  content:
    summary: Content of the file.
    description: |
      The content will be written to the given filepath in the format specified by `type`.
    type: [ string, array, object ]
  content_setting:
    filter:
      summary: Filters to apply to values.
      description: |
        This is only used when the content is a sequence or mapping.
        In this case, you can define a JSONPath to match paths within
        the content, and a filter function to remove paths based on their value.
      type: object
      additionalProperties:
        type: object
        additionalProperties: false
        required: [ jsonpath, function ]
        properties:
          jsonpath:
            title: JSONPath
            summary: JSONPath expression matching paths to filter.
            $ref: https://jsonschemata.repodynamics.com/string/oneline
          function:
            summary: Python lambda expression to use as filter.
            description: |
              The lambda expression must define a single parameter,
              which receives the value at each path matched by the JSONPath expression.
              It must then return a boolean, indicating whether to remove (True)
              the path.
            default: 'lambda value: value is None'
            default_description: |
              The default lambda expression removes values that are `None`:
            examples:
              - 'lambda value: value is None'
            examples_description:
              - 'Remove `None` values:'
          inplace:
            summary: Whether to apply the filter inplace.
            description: |
              When set to `True` the content in `metadata.json`
              will match the content of the file, as the filters
              are applied before writing the metadata file.
              Otherwise (when set to `False`), the filters
              are only applied to the output file, but not
              to `content` in the` metadata.json` file.
            type: boolean
            default: true
    separator:
      summary: Custom string to use as separator between content.
      description: |
        This is only used when the output filetype is plain text,
        and the content is a sequence or a mapping. In such cases,
        this separator is used to join the sequence elements or mapping values, respectively.
      type: string
      default: "\n"
    prefix:
      summary: Custom string to prepend to all content items.
      description: |
        This is only used when the output filetype is plain text,
        and the content is a sequence or a mapping. In such cases,
        this prefix is prepended to the beginning of each sequence element or mapping value, respectively.
      type: string
      default: ""
    suffix:
      summary: Custom string to append to all content items.
      description: |
        This is only used when the output filetype is plain text,
        and the content is a sequence or a mapping. In such cases,
        this suffix is appended to the end of each sequence element or mapping value, respectively.
      type: string
      default: ""
  file_setting:
    type: object
    additionalProperties: false
    default: { }
    properties:
      end_of_file_newline:
        type: boolean
        default: true
      sort_keys:
        type: boolean
        default: true
      json:
        type: object
        default: { }
        additionalProperties: false
        properties:
          indent:
            type: [ integer, 'null' ]
            default: 3
      yaml:
        type: object
        default: { }
        additionalProperties: false
        properties:
          mapping_indent:
            type: integer
            minimum: 2
            default: 2
          sequence_indent:
            type: integer
            minimum: 2
            default: 4
          sequence_indent_offset:
            type: integer
            minimum: 0
            default: 2
          multiline_string:
            enum: [ quote, block ]
            default: block
          remove_top_level_indent:
            type: boolean
            default: true
