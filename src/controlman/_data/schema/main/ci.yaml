$schema: https://json-schema.org/draft/2020-12/schema
title: Workflow
default:
  control:
    cache:
      retention_hours:
        extension: 24
        repo: 24
        user: 24
        orcid: 240
        doi: 1000
        python: 500
  schedule:
    update:
      cron: '43 6 * * 6'  # Every Saturday at 6:43 UTC.
      branch:
        main: pull
        release: pull
        pre: pull
    test:
      cron: '43 23 * * *'  # Every day at 23:43 UTC.
      branch:
        main: pull
        release: pull
        pre: pull
  tool:
    pre-commit:
      env:
        dependency:
          pre_commit:
            import_name: pre_commit
            url:
              docs: https://pre-commit.com/
            pip:
              spec: pre-commit == 3.3.3
        file:
          conda: &conda_dev_env
            name: ${{ repo.name }}-dev
            path: .github/dev_environment.yaml
      config:
        file:
          type: yaml
          path: .github/.pre-commit-config.yaml
          content:
            default_language_version:
              python: python3
            minimum_pre_commit_version: 3.3.3
            repos:
              - repo: https://github.com/pre-commit/pre-commit-hooks
                rev: v4.4.0
                hooks:
                  - id: check-ast
                    # https://github.com/pre-commit/pre-commit-hooks#check-ast
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-case-conflict
                    # https://github.com/pre-commit/pre-commit-hooks#check-case-conflict
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-executables-have-shebangs
                    # https://github.com/pre-commit/pre-commit-hooks#check-executables-have-shebangs
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-json
                    # https://github.com/pre-commit/pre-commit-hooks#check-json
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-shebang-scripts-are-executable
                    # https://github.com/pre-commit/pre-commit-hooks#check-shebang-scripts-are-executable
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-symlinks
                    # https://github.com/pre-commit/pre-commit-hooks#check-symlinks
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-toml
                    # https://github.com/pre-commit/pre-commit-hooks#check-toml
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-xml
                    # https://github.com/pre-commit/pre-commit-hooks#check-xml
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: check-yaml
                    # https://github.com/pre-commit/pre-commit-hooks#check-yaml
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: end-of-file-fixer
                    # https://github.com/pre-commit/pre-commit-hooks#end-of-file-fixer
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: mixed-line-ending
                    # https://github.com/pre-commit/pre-commit-hooks#mixed-line-ending
                    stages: [ pre-commit, manual ]
                    verbose: true
                  - id: no-commit-to-branch
                    # https://github.com/pre-commit/pre-commit-hooks#no-commit-to-branch
                    stages: [ pre-commit ]
                    args: [ --branch, main, --pattern, release/.* ]
                    verbose: true
                  - id: trailing-whitespace
                    # https://github.com/pre-commit/pre-commit-hooks#trailing-whitespace
                    stages: [ pre-commit, manual ]
                    verbose: true
              - repo: https://github.com/astral-sh/ruff-pre-commit
                # Ruff version.
                rev: v0.1.5
                hooks:
                  - id: ruff
                    stages: [ pre-commit, manual ]
                    args: [ --fix, --exit-non-zero-on-fix, --config, pyproject.toml ]
                    types_or: [ python, pyi, jupyter ]
                    verbose: true
    codecov:
      config:
        file:
          type: yaml
          path: .github/.codecov.yml
          content:
            coverage:
              precision: 2
              round: nearest
              range: "90...100"
              status:
                project:
                  default:
                    target: 100%
                    threshold: 5%
            comment:
              layout: "header, diff, flags, files"
              require_changes: false
              behavior: default
    readthedocs:
      config:
        workflow:
          name: ${{ repo.name }}
          platform: "community"
        file:
          type: yaml
          path: .readthedocs.yaml
          content:
            version: 2
            build:  # Set the version of Python and other tools you might need
              os: ubuntu-22.04
              tools:
                python: "mambaforge-4.10"
              jobs:
                post_checkout:
                  # versioningit needs the full git history to determine the package's version at build time.
                  # see: https://github.com/readthedocs/readthedocs.org/issues/5989#issuecomment-853039401
                  - git fetch --unshallow
            conda:  # Website dependencies
              environment: ${{ web.env.file.conda.path }}
            python:
              install:  # Install the package
                - method: pip
                  path: ${{ dir.pkg.root }}
            sphinx:  # Build with Sphinx
              configuration: ${{ dir.web.root }}/${{ dir.web.source }}/conf.py
              builder: dirhtml
              fail_on_warning: false
            formats: all  # Build all additional formats of the documentation, i.e. pdf, epub, and htmlzip
    pylint:
      env:
        dependency:
          pylint:
            import_name: pylint
            pip:
              spec: pylint[spelling] >= 3.0, < 4
        file:
          conda: *conda_dev_env
          pip:
            path: .github/workflow_requirements/pylint.txt
    mypy:
      env:
        dependency:
          mypy:
            import_name: mypy
            pip:
              spec: mypy[reports] >= 1.8, < 2
        file:
          conda: *conda_dev_env
          pip:
            path: .github/workflow_requirements/mypy.txt
    bandit:
      env:
        dependency:
          bandit:
            import_name: bandit
            pip:
              spec: bandit[toml]
          sarif:
            import_name: bandit_sarif_formatter
            pip:
              spec: bandit-sarif-formatter
        file:
          conda: *conda_dev_env
          pip:
            path: .github/workflow_requirements/bandit.txt
type: object
additionalProperties: false
required: [ control ]
properties:
  control:
    title: Control Center
    description: Configurations for the project's control center.
    type: object
    additionalProperties: false
    properties:
      cache:
        title: Cache
        description: |
          Settings for cached data,
          such as extension files downloaded from other GitHub repositories
          and data obtained through web-APIs.

          :::{admonition} Not Extensible
          :class: attention

          These configurations are not extensible, 
          as they are used to define extensions and their caching settings. 
          :::

          :::{admonition} Local Override
          :class: tip dropdown

          When working with a local clone of the repository on your computer,
          you can override these configurations 
          by creating a `.local_cc_config.yaml` file with the same syntax
          in the root of the repository.
          This file is automatically added to the `.gitignore` file
          and thus will not be tracked by Git 
          or pushed to the remote repository.
          This allows you to maintain a local caching configuration 
          without affecting the remote repository.


          :::
        type: object
        additionalProperties: false
        properties:
          retention_hours:
            title: Retention Time
            description: |
              Number of hours to keep cached data,
              before it is considered stale and synced with the source.
            type: object
            additionalProperties: false
            properties:
              extension:
                title: Extension Files
                description: |
                  Number of days to keep the cached extension files (defined in `extensions.yaml`)
                  retrieved from other GitHub repositories.
                type: number
                minimum: 0
              repo:
                title: Discussion Categories
                description: |
                  Number of days to keep the cached data retrieved from the GitHub Discussions categories.
                type: number
                minimum: 0
              user:
                title: API Data
                description: |
                  Number of days to keep the cached data retrieved from various web APIs,
                  such as GitHub repo/users data, software versions, publications etc.
                type: number
                minimum: 0
              orcid:
                title: ORCID Data
                description: |
                  Number of days to keep the cached data retrieved from the ORCID API.
                type: number
                minimum: 0
              doi:
                title: DOI Data
                description: |
                  Number of days to keep the cached data retrieved from the DOI API.
                type: number
                minimum: 0
              python:
                title: Python Data
                description: |
                  Number of days to keep the cached data retrieved from the Python API.
                type: number
                minimum: 0
  schedule:
    title: Scheduled Jobs
    description: |
      Configurations for the workflow's scheduled Continuous pipelines,
      triggered by GHA's [`schedule`](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule) event.
    type: object
    additionalProperties: false
    properties:
      update:
        title: Updates
        description: |
          Configurations for scheduled jobs that may result in updates to repository files and settings.
          These include Continuous Configuration Automation (CCA) to synchronize project configurations,
          as well as various Continuous Maintenance (CM) and Refactoring (CR) tasks.
        $ref: '#/definitions/scheduled_job'
      test:
        title: Tests
        description: |
          Configurations for the Continuous Testing (CT) pipeline of the package.
        $ref: '#/definitions/scheduled_job'
  tool:
    title: Tools
    description: |
      Configurations for tools used in the development workflow.
    type: object
    additionalProperties:
      title: Additional tools
      $ref: '#/definitions/tool_config'
    properties:
      pre-commit:
        allOf:
          - $ref: '#/definitions/tool_config'
      codecov:
        title: CodeCov
        description: |
          Configurations for CodeCov.
          https://docs.codecov.com/docs/codecov-yaml
          https://docs.codecov.com/docs/codecovyml-reference
        allOf:
          - $ref: '#/definitions/tool_config'
          - properties:
              config:
                properties:
                  file:
                    properties:
                      type:
                        const: yaml
                      path:
                        default: ".github/.codecov.yml"
                      content:
                        title: Configurations
                        description: |
                          Configurations for CodeCov.
                          https://docs.codecov.com/docs/codecov-yaml
                          https://docs.codecov.com/docs/codecovyml-reference
                        $ref: 'https://json.schemastore.org/codecov.json'
      readthedocs:
        title: ReadTheDocs Website Configurations
        description: |
          This will be used by ReadTheDocs to build the website on readthedocs.io.
          The syntax of this configuration file is documented at:
             https://docs.readthedocs.io/en/stable/config-file/v2.html
          In addition to the properties documented in the above link, the following
          properties can be set:
             name : string
                Slug name of the project on ReadTheDocs.
          Configurations for the ReadTheDocs website.
          See also: https://docs.readthedocs.io/en/stable/config-file/v2.html
        allOf:
          - $ref: '#/definitions/tool_config'
          - properties:
              config:
                properties:
                  file:
                    properties:
                      type:
                        const: yaml
                      path:
                        title: Path to the configuration file.
                        description: |
                          By default, [ReadtheDocs](https://docs.readthedocs.io/en/stable/config-file/index.html#where-to-put-your-configuration-file)
                          only looks for a `.readthedocs.yaml` file in the root of the repository.
                          However, you can [change this manually](https://docs.readthedocs.io/en/stable/guides/setup/monorepo.html#how-to-use-a-readthedocs-yaml-file-in-a-sub-folder)
                          by setting another path on the ReadTheDocs website,
                          and then specifying that path here.
                        type: string
                        default: .readthedocs.yaml
                        examples:
                          - .github/.readthedocs.yaml
                      content:
                        title: Config
                        description: |
                          Configuration settings for the ReadTheDocs website.
                          See also: https://docs.readthedocs.io/en/stable/config-file/v2.html
                  workflow:
                    required: [ name, platform, version_scheme, language ]
                    properties:
                      name:
                        description: Name of the project on ReadTheDocs, i.e. the project slug
                        type: string
                      platform:
                        description: ReadTheDocs hosting platform; either 'community' or 'business'
                        type: string
                        enum: [ community, business ]
                        default: community
                      version_scheme:
                        title: Versioning Scheme
                        description: |
                          Versioning scheme of the website.
                          See also: https://docs.readthedocs.io/en/stable/versioning-schemes.html
                        type: object
                        default: { }
                        additionalProperties: false
                        properties:
                          single_version:
                            title: Single Version
                            description: Whether the website has a single version or multiple versions.
                            type: boolean
                            default: false
                          translation:
                            title: Translation
                            description: Whether the website supports multiple languages.
                            type: boolean
                            default: false
                      language:
                        title: Language
                        description: Language of the website.
                        type: string
                        default: en
definitions:
  scheduled_job:
    type: object
    additionalProperties: false
    required: [ cron, branch ]
    properties:
      cron:
        title: Crontab Job
        description: |
          The [POSIX cron expression](https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07)
          of the task's scheduled time.
          This must match one of the `cron` entries of the project's main workflow,
          as defined in the `.github/workflows/main.yaml` file under the
          [`on.schedule`](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule) key.
        type: string
      branch:
        type: object
        default: { }
        additionalProperties: false
        properties:
          main:
            type: string
            enum: [ disable, report, pull, commit ]
            default: pull
          release:
            type: string
            enum: [ disable, report, pull, commit ]
            default: pull
          pre:
            type: string
            enum: [ disable, report, pull, commit ]
            default: pull
        required: [ main, release, pre-release ]
  tool_config:
    type: object
    additionalProperties: false
    minProperties: 1
    properties:
      env:
        title: Environment file configurations.
        type: object
        additionalProperties: false
        required: [ dependency, file ]
        properties:
          dependency:
            title: Dependencies
            type: object
            minProperties: 1
            additionalProperties:
              $ref: dependency
          file:
            title: Environment Files
            description: Configurations for output environment files to write the dependencies.
            $ref: env_file_config
      config:
        tile: Configurations for the tool.
        type: object
        additionalProperties: false
        properties:
          file:
            type: object
            additionalProperties: false
            required: [ type, path, content ]
            properties:
              type:
                title: Type
                description: |
                  Type of the configuration file.
                type: string
                enum: [ yaml, json, toml, txt ]
              path:
                title: Paths
                description: |
                  Path to the configuration file.
                type: string
                examples:
                  - .github/.pre-commit-config.yaml
              content:
                title: Settings
                type: [ string, array, object ]
                description: |
                  Configurations for the tool.
          workflow:
            title: Workflows
            description: |
              Configurations for the tool's workflows.
            type: object
            additionalProperties: true
