$schema: https://json-schema.org/draft/2020-12/schema
title: Workflow
description: |
  Configurations for the project's development workflow.
examples:
  - schedule:
      sync:
        cron: '43 6 * * 6'  # Every Saturday at 6:43 UTC.
        branch:
          main: pull
          release: pull
          pre-release: pull
      test:
        cron: '43 23 * * *'  # Every day at 23:43 UTC.
        branch:
          main: pull
          release: pull
          pre-release: pull
    tool:
      pre-commit:
        dependencies:
          - pip_spec: "pre-commit"
        config_file:
          path:
            ci: ".github/.pre-commit-config.yaml"
        config:
          default_language_version:
            python: python3
          minimum_pre_commit_version: 3.3.3
          repos:
            - repo: https://github.com/pre-commit/pre-commit-hooks
              rev: v4.4.0
              hooks:
                - id: check-ast
                  # https://github.com/pre-commit/pre-commit-hooks#check-ast
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-case-conflict
                  # https://github.com/pre-commit/pre-commit-hooks#check-case-conflict
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-executables-have-shebangs
                  # https://github.com/pre-commit/pre-commit-hooks#check-executables-have-shebangs
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-json
                  # https://github.com/pre-commit/pre-commit-hooks#check-json
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-shebang-scripts-are-executable
                  # https://github.com/pre-commit/pre-commit-hooks#check-shebang-scripts-are-executable
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-symlinks
                  # https://github.com/pre-commit/pre-commit-hooks#check-symlinks
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-toml
                  # https://github.com/pre-commit/pre-commit-hooks#check-toml
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-xml
                  # https://github.com/pre-commit/pre-commit-hooks#check-xml
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: check-yaml
                  # https://github.com/pre-commit/pre-commit-hooks#check-yaml
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: end-of-file-fixer
                  # https://github.com/pre-commit/pre-commit-hooks#end-of-file-fixer
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: mixed-line-ending
                  # https://github.com/pre-commit/pre-commit-hooks#mixed-line-ending
                  stages: [ pre-commit, manual ]
                  verbose: true
                - id: no-commit-to-branch
                  # https://github.com/pre-commit/pre-commit-hooks#no-commit-to-branch
                  stages: [ pre-commit ]
                  args: [ --branch, main, --pattern, release/.* ]
                  verbose: true
                - id: trailing-whitespace
                  # https://github.com/pre-commit/pre-commit-hooks#trailing-whitespace
                  stages: [ pre-commit, manual ]
                  verbose: true
            - repo: https://github.com/astral-sh/ruff-pre-commit
              # Ruff version.
              rev: v0.1.5
              hooks:
                - id: ruff
                  stages: [ pre-commit, manual ]
                  args: [ --fix, --exit-non-zero-on-fix, --config, pyproject.toml ]
                  types_or: [ python, pyi, jupyter ]
                  verbose: true
            - repo: https://github.com/pycqa/isort
              # isort - format imports
              # https://pycqa.github.io/isort/docs/configuration/pre-commit.html
              rev: 5.12.0
              hooks:
                - id: isort
                  stages: [ pre-commit, manual ]
                  args: [ "--settings-path", "pyproject.toml" ]
                  verbose: true
            - repo: https://github.com/psf/black-pre-commit-mirror
              # Black - code formatter
              # https://black.readthedocs.io/en/stable/integrations/source_version_control.html
              rev: 23.9.1
              hooks:
                - id: black-jupyter
                  stages: [ pre-commit, manual ]
                  args: [ "--config", "pyproject.toml" ]
                  verbose: true
      codecov:
        coverage:
          precision: 2
          round: nearest
          range: "90...100"
          status:
            project:
              default:
                target: 100%
                threshold: 5%
        comment:
          layout: "header, diff, flags, files"
          require_changes: false
          behavior: default
      pylint:
        dependencies:
          - pip_spec: pylint[spelling] >= 3.0, < 4
      mypy:
        dependencies:
          - pip_spec: mypy[reports] >= 1.8, < 2
      bandit:
        dependencies:
          - pip_spec: bandit[toml]
          - pip_spec: bandit-sarif-formatter
    cache:
      retention_days:
        api: 1
        extensions: 1

type: object
additionalProperties: false
required: [ control ]
properties:
  schedule:
    title: Scheduled Jobs
    description: |
      Configurations for the workflow's scheduled Continuous pipelines,
      triggered by GHA's [`schedule`](https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#schedule) event.
    type: object
    additionalProperties: false
    properties:
      update:
        title: Updates
        description: |
          Configurations for scheduled jobs that may result in updates to repository files and settings.
          These include Continuous Configuration Automation (CCA) to synchronize project configurations,
          as well as various Continuous Maintenance (CM) and Refactoring (CR) tasks.
        $ref: '#/definitions/scheduled_task'
      test:
        title: Tests
        description: |
          Configurations for the Continuous Testing (CT) pipeline of the package.
        $ref: '#/definitions/scheduled_task'
  tool:
    title: Tool Configurations
    description: Configurations for different tools used in the development workflow.
    type: object
    additionalProperties:
      type: object
      additionalProperties: false
      properties:
        dependencies:
          type: array
          items:
            title: Dependency
            description: Definition of a package dependency.
            type: object
            additionalProperties: false
            properties:
              usage:
                type: string
              pip_spec:
                title: Pip Specification
                description: |
                  Dependency specification for PyPI/pip, according to 
                  [PEP 508](https://peps.python.org/pep-0508/#specification).
                  See [Version Specifiers](https://packaging.python.org/en/latest/specifications/version-specifiers/#id5)
                  in PyPA's Python Packaging User Guide for more details.
                examples:
                  - "numpy >= 1.21.2"
                type: string
              conda_spec:
                title: Conda Specification
                description: |
                  Dependency specification for Conda, according to
                  [Conda Build](https://conda.io/projects/conda-build/en/stable/resources/package-spec.html#package-match-specifications).
                type: string
              conda_channel:
                type: string
              url_homepage:
                type: string
                format: uri
              url_docs:
                type: string
                format: uri
              url_source:
                type: string
                format: uri
        env_file:
          title: Environment Files
          description: Configurations for output environment files to write the dependencies.
          $ref: '#/definitions/env_file_config'
        config_file:
          title: Configuration Files
          description: Configurations for the output configuration files.
          $ref: '#/definitions/config_file_config'
        config:
          title: Configuration
          description: Configurations for the tool.
    properties:
      pre-commit:
        type: object
        additionalProperties: false
        properties:
          env_file:
            title: Environment Files
            description: Configurations for output environment files to write the dependencies.
            $ref: '#/definitions/env_file_config'
          config:
            title: Configuration File
            description: Configurations for the output configuration files.
            type: object
            additionalProperties: false
            properties:
              path:
                default: .github/.pre-commit-config.yaml
              config:
                title: Configuration
                description: Configurations for the tool.
                type: object
                additionalProperties: true
                required: [ repos ]
                properties:
                  repos:
                    type: array
                    minItems: 1
                    uniqueItems: true
                    items:
                      type: object
                      required: [ repo, rev, hooks ]
                      properties:
                        repo:
                          type: string
                        rev:
                          type: string
                        hooks:
                          type: array
                          minItems: 1
                          uniqueItems: true
                          items:
                            type: object
                            required: [ id, stages ]
                            properties:
                              id:
                                type: string
                              stages:
                                type: array
                                minItems: 1
                                uniqueItems: true
                                items:
                                  type: string
                              verbose:
                                type: boolean
                                default: true
      codecov:
        title: CodeCov
        description: |
          Configurations for CodeCov.
          https://docs.codecov.com/docs/codecov-yaml
          https://docs.codecov.com/docs/codecovyml-reference
        type: object
        properties:
          path:
            type: string
            default: ".github/.codecov.yml"
          config:
            type: object

      readthedocs:
        title: ReadTheDocs Website Configurations
        description: |
          This will be used by ReadTheDocs to build the website on readthedocs.io.
          The syntax of this configuration file is documented at:
             https://docs.readthedocs.io/en/stable/config-file/v2.html
          In addition to the properties documented in the above link, the following
          properties can be set:
             name : string
                Slug name of the project on ReadTheDocs.
          Configurations for the ReadTheDocs website.
          See also: https://docs.readthedocs.io/en/stable/config-file/v2.html
        type: object
        additionalProperties: false
        properties:
          name:
            description: Name of the project on ReadTheDocs, i.e. the project slug
            type: string
          platform:
            description: ReadTheDocs hosting platform; either 'community' or 'business'
            type: string
            enum: [ community, business ]
            default: community
          versioning_scheme:
            title: Versioning Scheme
            description: |
              Versioning scheme of the website.
              See also: https://docs.readthedocs.io/en/stable/versioning-schemes.html
            type: object
            default: { }
            additionalProperties: false
            properties:
              single_version:
                title: Single Version
                description: Whether the website has a single version or multiple versions.
                type: boolean
                default: false
              translation:
                title: Translation
                description: Whether the website supports multiple languages.
                type: boolean
                default: false
          language:
            title: Language
            description: Language of the website.
            type: string
            default: en
          path:
            title: Path
            description: |
              Path to the configuration file.
              
              By default, [ReadtheDocs](https://docs.readthedocs.io/en/stable/config-file/index.html#where-to-put-your-configuration-file)
              only looks for a `.readthedocs.yaml` file in the root of the repository.
              However, you can [change this manually](https://docs.readthedocs.io/en/stable/guides/setup/monorepo.html#how-to-use-a-readthedocs-yaml-file-in-a-sub-folder)
              by setting another path on the ReadTheDocs website,
              and then specifying that path here.
            type: string
            default: .readthedocs.yaml
            examples:
              - .github/.readthedocs.yaml
          config:
            title: Config
            description: |
              Configuration settings for the ReadTheDocs website.
              See also: https://docs.readthedocs.io/en/stable/config-file/v2.html
            $ref: 'https://raw.githubusercontent.com/readthedocs/readthedocs.org/master/readthedocs/rtd_tests/fixtures/spec/v2/schema.json'
        required: [ name, platform, versioning_scheme, language, version ]
  control:
    title: Control Center
    description: |
    type: object
    additionalProperties: false
    properties:
      cache:
        title: Cache Configurations
        description: |
          Settings for cached data,
          such as extension files downloaded from other GitHub repositories
          and data obtained through web-APIs.
          
          :::{admonition} Not Extensible
          :class: attention
          
          These configurations are not extensible, 
          as they are used to define extensions and their caching settings. 
          :::
    
          :::{admonition} Local Override
          :class: tip dropdown
    
          When working with a local clone of the repository on your computer,
          you can override these configurations 
          by creating a `.local_cc_config.yaml` file with the same syntax
          in the root of the repository.
          This file is automatically added to the `.gitignore` file
          and thus will not be tracked by Git 
          or pushed to the remote repository.
          This allows you to maintain a local caching configuration 
          without affecting the remote repository.
          :::
        type: object
        additionalProperties: false
        properties:
          retention_hours:
            title: Retention Time
            description: |
              Number of hours to keep cached data,
              before it is considered stale and synced with the source.
            type: object
            additionalProperties: false
            properties:
              extension:
                title: Extension Files
                description: |
                  Number of days to keep the cached extension files (defined in `extensions.yaml`)
                  retrieved from other GitHub repositories.
                type: number
                minimum: 0
              repo:
                title: Discussion Categories
                description: |
                  Number of days to keep the cached data retrieved from the GitHub Discussions categories.
                type: number
                minimum: 0
              user:
                title: API Data
                description: |
                  Number of days to keep the cached data retrieved from various web APIs,
                  such as GitHub repo/users data, software versions, publications etc.
                type: number
                minimum: 0



definitions:
  scheduled_task:
    type: object
    additionalProperties: false
    required: [ cron, branch ]
    properties:
      cron:
        title: Crontab Job
        description: |
          The [POSIX cron expression](https://pubs.opengroup.org/onlinepubs/9699919799/utilities/crontab.html#tag_20_25_07)
          of the task's scheduled time.
          This must match one of the `cron` entries of the project's main workflow,
          as defined in the `.github/workflows/main.yaml` file under the
          [`on.schedule`](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onschedule) key.
        type: string
      branch:
        type: object
        default: { }
        additionalProperties: false
        properties:
          main:
            type: string
            enum: [ disable, report, pull, commit ]
            default: pull
          release:
            type: string
            enum: [ disable, report, pull, commit ]
            default: pull
          pre-release:
            type: string
            enum: [ disable, report, pull, commit ]
            default: pull
        required: [ main, release, pre-release ]
  config_file_config:
    title: Configuration Files
    description: Configurations for the output configuration files.
    type: object
    additionalProperties: false
    properties:
      path:
        title: Paths
        description: |
          Paths to the configuration files.
        type: object
        additionalProperties:
          title: Path
          description: Path to the configuration file.
          type: string
  env_file_config:
    title: Environment Files
    description: Configurations for output environment files to write the dependencies.
    type: object
    additionalProperties: false
    properties:
      pip:
        title: Pip
        description: Configurations for the output `requirements.txt`-style environment files.
        type: object
        additionalProperties: false
        properties:
          path:
            type: object
            additionalProperties:
              type: string
      conda:
        title: Conda
        description: Configurations for the output `environment.yaml`-style environment files.
        type: object
        additionalProperties: false
        properties:
          path:
            type: object
            additionalProperties:
              type: string
